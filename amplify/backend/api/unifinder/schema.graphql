enum Departments {
  BIOLOGY
  COMPUTER_SCIENCE
  CHEMISTRY
  PHYSICS
  MATHEMATICS
  PSYCHOLOGY
  ENGLISH
  ECONOMICS
  HISTORY
  POLITICAL_SCIENCE
  SOCIOLOGY
  ANTHROPOLOGY
  BUSINESS_ADMINISTRATION
  EDUCATION
  ENGINEERING
  FINE_ARTS
  MUSIC
  ARCHITECTURE
  HEALTH_SCIENCES
  LINGUISTICS
  COMMUNICATION
  SOCIAL_WORK
  PUBLIC_HEALTH
  INTERNATIONAL_RELATIONS
  CULTURAL_STUDIES
  RELIGIOUS_STUDIES
  FILM_STUDIES
  PHILOSOPHY
}

type Point @model @auth(rules: [{allow: public}]) {
  id: ID!
  userSub: String
  points: Int
}

enum Region {
  EUROPE
  ASIA
  AFRICA
  OCEANIA
  SOUTHAMERICA
  NORTHAMERICA
}

type RecommendUni @model @auth(rules: [{allow: public}]) {
  id: ID!
  weather: String
  region: Region
  country: String
  degree: String
  interest: String
  userSub: String
}

type FavoriteUni @model @auth(rules: [{allow: public}]) {
  id: ID!
  uniId: ID
  userSub: String
}

type ContactUs @model @auth(rules: [{allow: public}]) {
  id: ID!
  Name: String
  Email: AWSEmail
  Text: String
}

type Article @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String
  description: String
  date: AWSDate
  author: String
  image: AWSURL
}

type BadgeUser @model @auth(rules: [{allow: public}]) {
  id: ID!
  badgeID: ID
  userEmail: String
  Badges: [Badge] @manyToMany(relationName: "BadgeUserBadge")
}

type Badge @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  description: String
  image: AWSURL
  badgeusers: [BadgeUser] @manyToMany(relationName: "BadgeUserBadge")
}

type UniItem @model @auth(rules: [{allow: public}]) {
  id: ID!
  ranking: Int
  name: String
  region: String
  city: String
  country: String
  photo: AWSURL
  description: String
  address: String
  website: AWSURL
  phone: AWSPhone
  email: AWSEmail
  type: String
  accreditation: String
  weather: String
  departments: [String]
  price: Int
  enrollment: Int
  scholarships: [String]
  requirements: [String]
  stuff: Int
  facilities: [String]
  programs: [String]
  acceptance_rate: Float
  graduation_rate: Float
}
 